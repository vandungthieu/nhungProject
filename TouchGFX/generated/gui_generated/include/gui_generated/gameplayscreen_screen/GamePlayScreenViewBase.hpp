/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAMEPLAYSCREENVIEWBASE_HPP
#define GAMEPLAYSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/gameplayscreen_screen/GamePlayScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class GamePlayScreenViewBase : public touchgfx::View<GamePlayScreenPresenter>
{
public:
    GamePlayScreenViewBase();
    virtual ~GamePlayScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image gamplayBackground;
    touchgfx::Image role;
    touchgfx::Button homeBtn;
    touchgfx::Button pauseBtn;
    touchgfx::Button replayBtn;
    touchgfx::Button volumeBtn;
    touchgfx::TextAreaWithOneWildcard textScore;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTSCORE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textScoreBuffer[TEXTSCORE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GamePlayScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GAMEPLAYSCREENVIEWBASE_HPP
